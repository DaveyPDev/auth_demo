
i was able to assgin t = Tweet(text='First tweet', user_id=3)
and i want to say I had 
t.text and t.user to work but not t.id. looks like in the video 
he gets id to work


In [1]: %run app.py

In [2]: db.create_all()
2023-04-25 21:21:58,298 INFO sqlalchemy.engine.Engine select pg_catalog.version()
2023-04-25 21:21:58,298 INFO sqlalchemy.engine.Engine [raw sql] {}
2023-04-25 21:21:58,299 INFO sqlalchemy.engine.Engine select current_schema()
2023-04-25 21:21:58,299 INFO sqlalchemy.engine.Engine [raw sql] {}
2023-04-25 21:21:58,299 INFO sqlalchemy.engine.Engine show standard_conforming_strings
2023-04-25 21:21:58,299 INFO sqlalchemy.engine.Engine [raw sql] {}
2023-04-25 21:21:58,300 INFO sqlalchemy.engine.Engine BEGIN (implicit)
2023-04-25 21:21:58,300 INFO sqlalchemy.engine.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2023-04-25 21:21:58,300 INFO sqlalchemy.engine.Engine [generated in 0.00011s] {'name': 'tweets'}
2023-04-25 21:21:58,301 INFO sqlalchemy.engine.Engine select relname from pg_class c join pg_namespace n on n.oid=c.relnamespace where pg_catalog.pg_table_is_visible(c.oid) and relname=%(name)s
2023-04-25 21:21:58,301 INFO sqlalchemy.engine.Engine [cached since 0.00103s ago] {'name': 'users'}
2023-04-25 21:21:58,302 INFO sqlalchemy.engine.Engine COMMIT

In [3]: t = Tweet(text='first tweet', user_id=3)

In [4]: t
Out[4]: <Tweet (transient 4553250448)>

In [5]: t.id

In [6]: t.text
Out[6]: 'first tweet'

In [7]: t.user_id
Out[7]: 3
